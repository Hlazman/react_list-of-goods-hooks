{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","getReorderedGoods","goods","sortType","isReversed","visibleGoods","sort","goodOne","goodTwo","ALPABET","localeCompare","LENGTH","length","reverse","App","useState","setIsReversed","NONE","setSortType","toggleReset","className","type","classNames","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAcK,SAASC,EACdC,EADK,GAGJ,IADCC,EACF,EADEA,SAAUC,EACZ,EADYA,WAENC,EAAY,YAAOH,GAoBzB,OAlBAG,EAAaC,MAAK,SAACC,EAASC,GAC1B,OAAQL,GACN,KAAKJ,EAASU,QACZ,OAAOF,EAAQG,cAAcF,GAE/B,KAAKT,EAASY,OACZ,OAAOJ,EAAQK,OAASJ,EAAQI,OAGlC,QACE,OAAO,MAITR,GACFC,EAAaQ,UAGRR,G,SAnCJN,O,eAAAA,I,qBAAAA,I,oBAAAA,M,KAsCE,IAAMe,EAAgB,WAC3B,MAAoCC,oBAAS,GAA7C,mBAAOX,EAAP,KAAmBY,EAAnB,KACA,EAAgCD,mBAAShB,EAASkB,MAAlD,mBAAOd,EAAP,KAAiBe,EAAjB,KACMC,EAAchB,IAAaJ,EAASkB,MAAQb,EAmBlD,OACE,sBAAKgB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UACEE,IAAW,iBACT,CAAE,WAAYnB,IAAaJ,EAASU,UAExCc,QA1BmB,WACzBL,EAAYnB,EAASU,UAmBjB,iCAWA,wBACEY,KAAK,SACLD,UACEE,IAAW,oBACT,CAAE,WAAYnB,IAAaJ,EAASY,SAExCY,QAjCa,WACnBL,EAAYnB,EAASY,SA0BjB,4BAWA,wBACEU,KAAK,SACLD,UACEE,IAAW,oBACT,CAAE,YAAalB,IAEnBmB,QAxCa,WACnBP,GAAeZ,IAiCX,qBAUCe,GACC,wBACEE,KAAK,SACLD,UAAU,4BACVG,QAAS,kBA3CjBL,EAAYnB,EAASkB,WACrBD,GAAc,IAuCR,sBAUJ,6BACE,6BACGf,EAAkBD,EAAiB,CAAEG,WAAUC,eAC7CoB,KAAI,SAAAC,GAAI,OACP,oBAAe,UAAQ,OAAvB,SAA+BA,GAAtBA,cC7HvBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.af0e6975.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport classNames from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((goodOne, goodTwo) => {\n    switch (sortType) {\n      case SortType.ALPABET:\n        return goodOne.localeCompare(goodTwo);\n\n      case SortType.LENGTH:\n        return goodOne.length - goodTwo.length;\n        break;\n\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [isReversed, setIsReversed] = useState(false);\n  const [sortType, setSortType] = useState(SortType.NONE);\n  const toggleReset = sortType !== SortType.NONE || isReversed;\n\n  const sortAlphabetically = () => {\n    setSortType(SortType.ALPABET);\n  };\n\n  const sortByLength = () => {\n    setSortType(SortType.LENGTH);\n  };\n\n  const reverseGoods = () => {\n    setIsReversed(!isReversed);\n  };\n\n  const reset = () => {\n    setSortType(SortType.NONE);\n    setIsReversed(false);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={\n            classNames('button is-info',\n              { 'is-light': sortType !== SortType.ALPABET })\n          }\n          onClick={sortAlphabetically}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={\n            classNames('button is-success',\n              { 'is-light': sortType !== SortType.LENGTH })\n          }\n          onClick={sortByLength}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={\n            classNames('button is-warning',\n              { 'is-light': !isReversed })\n          }\n          onClick={reverseGoods}\n        >\n          Reverse\n        </button>\n        {toggleReset && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={() => reset()}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        <ul>\n          {getReorderedGoods(goodsFromServer, { sortType, isReversed })\n            .map(good => (\n              <li key={good} data-cy=\"Good\">{good}</li>\n            ))}\n        </ul>\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}